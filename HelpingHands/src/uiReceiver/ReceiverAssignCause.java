/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiReceiver;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.causes.Cause;
import model.causes.CauseDirectory;
import profile.Receiver.Receiver;
import profile.Receiver.ReceiverDirectory;
import utilities.Constants;
import utilities.DbConnection;

/**
 *
 * @author abhis
 */
public class ReceiverAssignCause extends javax.swing.JPanel {

    /**
     * Creates new form ReceiverLandingPage
     */
    private String loggedInUser;    
    CauseDirectory causeDirectory;
    Cause cause;
    ReceiverDirectory receiverDirectory;
    Receiver receiver;
    public ReceiverAssignCause(String loggedInUser) {
        initComponents();
        this.causeDirectory = new CauseDirectory(cause);        
        this.loggedInUser = loggedInUser;
        this.receiverDirectory = new ReceiverDirectory(receiver);
        for(String item : Constants.ngoOrganisations){
            combobxCause.addItem(item);
        }
        combobxCause.setSelectedIndex(-1);
        
    }
    private void popReceiverTable(ArrayList<Cause> receiverTable) throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel)tblCause.getModel();
        model.setRowCount(0);
        for(Cause cause: receiverTable){
            Object[] row = new Object[6];
            row[0] = cause;
            row[1] = cause.getCauseName();
            row[2] = cause.getCauseDesc();
            row[3] = cause.getRecCategory();
            row[4] = cause.getCountry();                                     
            model.addRow(row);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combobxCause = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCause = new javax.swing.JTable();
        btnAssignCause = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        combobxCause.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combobxCauseFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combobxCauseFocusLost(evt);
            }
        });
        combobxCause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobxCauseActionPerformed(evt);
            }
        });

        tblCause.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NGO Organisation", "Cause Name", "Cause Description", "Receiving Category", "Country"
            }
        ));
        jScrollPane1.setViewportView(tblCause);

        btnAssignCause.setText("Assign Cause");
        btnAssignCause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignCauseActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Cause");

        btnSearch.setText("Search Cause");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(combobxCause, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnAssignCause)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobxCause, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAssignCause)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void combobxCauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobxCauseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobxCauseActionPerformed

    private void combobxCauseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combobxCauseFocusGained
        // TODO add your handling code here:
        

    }//GEN-LAST:event_combobxCauseFocusGained

    private void combobxCauseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combobxCauseFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_combobxCauseFocusLost

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

        ResultSet resultSet = receiverDirectory.getReceiver(loggedInUser.split("-")[0].trim());
        try {
            if (!resultSet.isBeforeFirst() ) {
                System.out.println("No data");
                return;
            }   } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "No Causes Available for this Category");
        }
        try {
            while(resultSet.next()){
                System.out.println(resultSet.getString("Country")); 
                String country = resultSet.getString("Country");
                String category = resultSet.getString("Type");
                String cause1 = combobxCause.getSelectedItem().toString(); 
                ;
                popReceiverTable(receiverDirectory.popReceiverTable(country,category,cause1));
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(ReceiverAssignCause.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAssignCauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignCauseActionPerformed
        // TODO add your handling code here:
        
        String cause = combobxCause.getSelectedItem().toString();
        ResultSet resultSet = receiverDirectory.getReceiver(loggedInUser.split("-")[0].trim());
        try {
            if (!resultSet.isBeforeFirst() ) {
                System.out.println("No data");
                return;
            }   } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "No Causes Available for this Category");
        }
        try {
            while(resultSet.next()){
                System.out.println(resultSet.getString("Country")); 

                int SelectedRow = tblCause.getSelectedRow();
                if(SelectedRow<0){  
                    JOptionPane.showMessageDialog(this, "Please Select a row");
                }else{
                    DefaultTableModel m2 = (DefaultTableModel)tblCause.getModel();
                    Cause SelectedRecords = (Cause) m2.getValueAt(SelectedRow, 0);
                    System.out.println("CAUSE IDDDDD "+SelectedRecords.getCauseId());
                    JOptionPane.showMessageDialog(this,"Thank you for Choosing Helping Hands \n Your Cause matters");
                    String country = SelectedRecords.getCountry();
                    String category = SelectedRecords.getRecCategory();
                    String recCause = SelectedRecords.getCauseName();
                    receiverDirectory.updateCause(Integer.valueOf(resultSet.getString("ID")), Integer.valueOf(SelectedRecords.getCauseId()));
                    return;
                }      
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(ReceiverAssignCause.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
    }//GEN-LAST:event_btnAssignCauseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignCause;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> combobxCause;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCause;
    // End of variables declaration//GEN-END:variables
}
